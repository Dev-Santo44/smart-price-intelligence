services:
  postgres:
    image: postgres:16-alpine
    container_name: spi-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - spi_pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-backend
    restart: always
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
  

  # ml:
  #   build:
  #     context: ./docker
  #     dockerfile: ml.Dockerfile
  #   container_name: spi-ml
  #   env_file: .env
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./models:/app
  #   working_dir: /app
  #   command: sh -c "pip install -r requirements.txt && uvicorn src.app:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build: ./frontend
    container_name: smart-price-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5000
    depends_on:
      - backend
    

volumes:
  spi_pg:
